%Программа поиска собственных векторов матрицы
%с помощью метода обратной итерации на примере
%трехдиагональной матрицы
%очищаем рабочее пространство
clear all
%определяем максимальный порядок матрицы A=Q
nmax=200;
%задаем параметр матрицы A=Q
q=0.1;
%организуем цикл расчетов собственных векторов
%для матриц различных порядков (от 1 до nmax)
for n=1:nmax
    %формируем трехдиагональную матрицу
    %A=Q порядка n
    A=zeros(n);
    for i=1:n
        A(i,i)=1+2*q;
    end
    for i=2:n
        A(i,i-1)=-q;
    end
    for i=1:(n-1)
        A(i,i+1)=-q;
    end
    %цикл расчета собственных векторов методом
    %обратной итерации
    for k=1:n
        %определяем собственное значение
        lambda(k)=1+4*q*sin((pi*k)/(2*(n+1)))^2;
        %возмущаем собственное значение
        lambda(k)=lambda(k)+1e-5*randn;
        %формируем правую часть системы уравнений
        %метода обратной итерации
        b=randn(n,1);
        %организуется итерационный процесс метода
        %обратной итерации с тремя итерациями
        x0=b;
        for j=1:3
            %решаем систему обратной итерации
            x1=(A-lambda(k)*eye(n))\x0;
            x0=x1/norm(x1);
        end
        %формируется матрица, в которой столбцами
        %являются собственные вектора матрицы A=Q
        for j=1:n
            ev(j,k)=x0(j);
        end
    end
    %оценивается точность найденных собственных
    %векторов для каждого порядка матрицы
    error(n)=0;
    for k=1:n
        error(n)=error(n)+...
                 norm((A-lambda(k)*eye(n))*ev(:,k));
    end
end
%рисуется зависимость погрешности вычисления
%собственных векторов от порядка матрицы
plot(1:nmax,error);