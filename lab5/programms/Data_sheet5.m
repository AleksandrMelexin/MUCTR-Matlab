%Программа поиска корней уравнения f(x)=0
%методом дихотомии (деления отрезка пополам)
%очищаем рабочее пространство
clear all
%определяем точность численной оценки корня
eps=1e-10;
%определяем максимальное количество делений
%отрезка пополам (итераций)
itermax=100;
%выбираем различные представления для
%функции f(x), а также исходный отрезак,
%на котором есть хотя бы один корень
% f=@(x)(exp(-x)-x-1);
% x0=-2; x1=3;
f=@(x)sin(4*pi*x);
x0=-1+0.1*randn; x1=1+0.1*randn;
iter=1;
%организуем цикл делений отрезка пополам
%до тех пор, пока либо не достигнута
%нужная точность, либо не превышен предел
%деления отрезка пополам, либо значения
%функции на концах исходного отрезка
%одного знака
while ((x1-x0)>2*eps)&(iter<itermax)&...
                      (f(x0)*f(x1)<=0)
    x2=0.5*(x0+x1);
    root(iter)=x2;
    if f(x0)*f(x2)<=0
        x1=x2;
    end
    if f(x2)*f(x1)<=0
        x0=x2;
    end   
    iter=iter+1;
end
root(iter)=0.5*(x0+x1);
%рисуем историю сходимости итераций к
%корню уравнения
plot(1:iter,root,'-*');