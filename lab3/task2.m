% задание 2

A = [9.1 5.6 7.8; % матрица коэффициентов
    3.8 5.1 2.8;
    4.1 5.7 1.2];
B = [-9.8; 6.7; 5.8]; % столбец свободных коэффициентов

X2 = linsolve(A, B);
X = gauss_elimination(A, B);
error = A * X - B; % проверка точности решения

disp(['детерминант матрицы коэффициентов: ', num2str(det(A))]); 
disp(['ранг матрицы коэффициентов: ', num2str(rank(A))]);
disp(['норма матрицы коэффициентов: ', num2str(norm(A, inf))]);
disp(['число обусловленности матрицы коэффициентов: ', num2str(cond(A))]);
disp('Решение СЛАУ методом Гаусса:');
disp(X);
disp('Ошибка решения:');
disp(error);
disp('Решение СЛАУ методом с помощью функции linsolve:');
disp(X2);

function x = gauss_elimination(A, b)
    % Проверка на совместность системы
    [m, n] = size(A);
    if m ~= n
        error('Матрица коэффициентов должна быть квадратной');
    end
    
    Ab = [A, b]; % Объединение матрицы коэффициентов и столбца свободных членов
    
    % Прямой ход метода Гаусса
    for i = 1:n
        % Выбор главного элемента
        [~, pivot_row] = max(abs(Ab(i:end, i)));
        pivot_row = pivot_row + i - 1;
        
        % Обмен строк, если нужно
        if pivot_row ~= i
            Ab([i pivot_row], :) = Ab([pivot_row i], :);
        end
        
        % Проверка на нулевой главный элемент
        if Ab(i, i) == 0
            error('Система не имеет единственного решения');
        end
        
        % Приведение к единичному главному элементу
        Ab(i, :) = Ab(i, :) / Ab(i, i);
        
        % Вычитание строки с единичным главным элементом
        % из всех нижележащих строк
        for j = i+1:n
            Ab(j, :) = Ab(j, :) - Ab(j, i) * Ab(i, :);
        end
    end
    
    % Обратный ход метода Гаусса
    x = zeros(n, 1);
    for i = n:-1:1
        x(i) = Ab(i, end) - Ab(i, i+1:end-1) * x(i+1:end);
    end
end

