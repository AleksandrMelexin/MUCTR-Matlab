%Плохотников К.Э. Вычислительные методы.
%Теория и практика в среде MATLAB
%Программа, иллюстрирующая поиск минимума
%функции F(x,y)=(y-sin(x))^2+0.1x^2
%методом покоординатного спуска
%очищаем рабочее пространство
clear all
%задаем точность близости частных производных
%функции F к нулю
eps=1e-3;
%определяем функцию и ее частные производные
F=@(x,y)(y-sin(x))^2+0.1*x^2;
Fx=@(x,y)-2*cos(x)*(y-sin(x))+0.2*x;
Fxx=@(x,y)2*y*sin(x)+2*cos(2*x)+0.2;
Fy=@(x,y)2*(y-sin(x));
Fyy=@(x,y)2;
%задаем начальное приближение
x(1)=4.5; y(1)=-1;
%задаем счетчик числа шагов в методе спуска и
%максимальное число шагов
k=1; iterm=200;
%организуем цикл покоординатного спуска
while ((abs(Fx(x(k),y(k)))>eps)|...
       (abs(Fy(x(k),y(k)))>eps))&(k<iterm)
    %цикл спуска по координате x осуществим с
    %помощью метода Ньютона
    xs=x(k);
    for i=1:2
        xs=xs-Fx(xs,y(k))/Fxx(xs,y(k));
    end
    k=k+1;
    x(k)=xs; y(k)=y(k-1);
    %цикл спуска по координате y осуществим с
    %помощью метода Ньютона
    ys=y(k);
    for i=1:2
        ys=ys-Fy(x(k),ys)/Fyy(x(k),ys);
    end
    k=k+1;
    x(k)=x(k-1); y(k)=ys;
end
%подготовительные мероприятия к построению
%линий уровня
[u v]=meshgrid(-2*pi:0.1:2*pi,-pi:0.1:pi);
Func=(v-sin(u)).^2+0.1*u.^2;
%определяем значения функции, линии уровня
%которых будут построены
for i=1:5
    s(i)=F(x(i),y(i));
end
%построение линий уровня
contour(u,v,Func,s);
hold on
%построение траектории спуска к минимуму
%функции F
line(x,y,'Color','black');